buildscript {

    /**   [ext] - build.gradle 파일 내의 전역변수 설정   */
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }

    /**  [repositories]
     * 각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을지를 정한다.
     *
     * mavenCentral() - 기본적으로 많이 사용하지만, 내가 만든 라이브러리를 업로드 하기 위한 과정이 많이 복잡하다.
     * jcenter() - mavenCentral()의 단점을 보완해 업로드가 쉬워서  많은 개발자들이 여기로 넘어온다.
     */
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

/**
 * 이 4개의 플러그인들은 자바, 스프링 부트를 사용하기 위한 필수 플러그인이다.
 */
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'   // 스프링 부트의 의존성들을 관리해주는 플러그인 [필수]

//plugins {
//    id 'java'
//}

group 'com.jojoldu.book'
version '1.0-SNAPSHOT'


repositories {
    mavenCentral()
}



/**
 * 프로젝트 개발에 필요한 의존성들을 선언하는 곳이다.
 */
dependencies {

    compile('org.springframework.boot:spring-boot-starter-web')
    testCompile('org.springframework.boot:spring-boot-starter-test')

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}